///https://www.prisma.io/docs/guides/upgrade-guides/upgrade-from-prisma-1/upgrade-from-mongodb-beta
//https://www.prisma.io/docs/concepts/components/prisma-schema/relations
//npx prisma init --datasource-provider=mongodb
//npx prisma generate


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Filme {
  id String @id @default(cuid())
  titulo String
  genero String[]
  categoria String
  descricao String
  popularidade Int @default(0)
  type String @default("filme")
  poster String
  imagem_fundo String
  data  String
  file String
  treiler String?
  voto_medio Float @default(0)
  duracao Int @default(0)
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  @@index([titulo])
  @@map("filme")
}



model Serie {
  id String @id @default(cuid())
  titulo String
  temporada Temporada[] @relation("TituloTemporada")
  genero String
  descricao String
  popularidade Int @default(0)
  type String @default("serie")
  poster String
  imagem_fundo String
  data  String
  treiler String?
  voto_medio Float

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  @@index([titulo])
  @@map("serie")
}

model Temporada {
  id String @id @default(cuid())
  titulo String 
  num_episodios Int
  episodios  Episodio[] @relation("Episodios")
  serie Serie @relation("TituloTemporada", fields: [serieId], references: [id])
  serieId String

  @@index([titulo])
  @@map("temporada")
}

model Episodio {
  id String @id @default(cuid())
  titulo String  
  descricao String
  categoria String?
  data  String 
  poster String?
  voto_medio Float  @default(0)
  file String 
  duracao Int?
  temporada Temporada @relation("Episodios", fields: [temporadaId], references: [id])
  temporadaId String

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  @@index([titulo])
  @@map("episodio")
}


model Usuario {
  id String @id @default(uuid())
  nome String
  email String @unique
  senha String
  eAdmin Boolean @default(false)

  @@index( [email, nome])
  @@map("usuario")
}